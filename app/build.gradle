apply plugin: 'com.android.application'

/**
 * 从../signingfiles/keystore.properties下读取签名文件的位置和密码
 * 文件的位置可以根据实际情况配置，放入本地或者代码里，以及是否在版本控制中
 * 如果没有相关文件或者参数不对将抛出异常
 */
def setSigningProperties() {
    def propFile = file('../signingfiles/keystore.properties')
    if (propFile.canRead()) {
        def Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') && props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
            android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
            android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        } else {
            println 'signing.properties found but some entries are missing'
            throw new Exception("signing.properties found but some entries are missing")
            //android.buildTypes.release.signingConfig = null
        }
    } else {
        println 'signing.properties not found'
        throw new Exception("signing.properties not found:" + propFile.absolutePath)
        //android.buildTypes.release.signingConfig = null
    }
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.jeejio.autorecorder"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 3
        versionName "3.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            //配置签名两种方式

            //1.自己读取签名配置
            setSigningProperties()

            //2.这里设置文件签名相关参数宏
            //在工程根目录或者~/.gradle/下的gradle.properties属性文件中定义
//            storeFile file(MYAPP_RELEASE_STORE_FILE)
//            storePassword MYAPP_RELEASE_STORE_PASSWORD
//            keyAlias MYAPP_RELEASE_KEY_ALIAS
//            keyPassword MYAPP_RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }

    //自定义输出apk名字
    applicationVariants.all {
        variant ->
            variant.outputs.all { output ->
                if (buildType.name == 'release') {
                    outputFileName = new File("app_v" + defaultConfig.versionName + "_" +
                            new Date().format("yyyy-MM-dd HH:mm") + "_" +
                            buildType.name + ".apk")
                }
            }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.aliyun.dpa:oss-android-sdk:+'
    implementation 'com.contrarywind:Android-PickerView:4.1.7'
    implementation 'com.google.code.gson:gson:2.7'
    implementation 'me.samlss:lighter:1.0.3'
    implementation 'pub.devrel:easypermissions:2.0.1'
    implementation files('libs/pinyin4j-2.5.0.jar')
}


